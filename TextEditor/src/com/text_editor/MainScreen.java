/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.text_editor;
import com.main.LineNumberingTextArea;
import javax.swing.text.Element;
import com.ozten.font.JFontChooser;
import java.awt.Font;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.AttributeSet;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.StyleContext;
/**
 *
 * @author HP
 */
public class MainScreen extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    
    File currentEditingFile=null;//will have the selected file from the options
     File currentEditingFile1=null;//will have the selected file from the options
    private final JFileChooser openfilechooser,saveDialog,imagefilechooser;
          Font font,font1,fontcolor;
           LineNumberingTextArea lineNumberingTextArea;
    public MainScreen() {
        initComponents();
         lineNumberingTextArea= new LineNumberingTextArea(display);
        setTitle("SPCC:Text Editor");
        openfilechooser=new JFileChooser();
        saveDialog=new JFileChooser();
        imagefilechooser=new JFileChooser();
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");  //shows only text files
        openfilechooser.setFileFilter(filter); 
        saveDialog.setFileFilter(filter); 
        
         FileNameExtensionFilter filter1 = new FileNameExtensionFilter("Image Files", "jpg", "png", "gif", "jpeg");  //shows only text files
         imagefilechooser.setFileFilter(filter1);
         
        font=new Font("Arial",Font.BOLD,25);
        font1=new Font("Arial",Font.ITALIC,25);
        fontcolor=new Font("Arial",Font.PLAIN,20);
      
        display.getDocument().addDocumentListener(new DocumentListener()
{
    @Override
    public void insertUpdate(DocumentEvent documentEvent)
    {
        lineNumberingTextArea.updateLineNumbers();
    }

    @Override
    public void removeUpdate(DocumentEvent documentEvent)
    {
        lineNumberingTextArea.updateLineNumbers();
    }

    @Override
    public void changedUpdate(DocumentEvent documentEvent)
    {
        lineNumberingTextArea.updateLineNumbers();
    }
        }); 
             
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextPane();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/icons8-open-filled-50.png"))); // NOI18N
        jButton2.setText("Open");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/icons8-save-50.png"))); // NOI18N
        jButton1.setText("SAVE");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/if_font_bold_42240.png"))); // NOI18N
        jButton3.setText("BOLD");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/if_text_italic_103729.png"))); // NOI18N
        jButton4.setText("ITALIC");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/icons8-f-50.png"))); // NOI18N
        jButton5.setText("SELECT FONT");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/if_105_Underline_183231.png"))); // NOI18N
        jButton6.setText("UNDERLINE");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/icons8-numbered-list-50.png"))); // NOI18N
        jButton8.setText("DISPLAY LINE NUMBERS");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton8);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/if_icon-image_211677.png"))); // NOI18N
        jButton9.setText("INSERT IMAGE");
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton9);

        jScrollPane2.setViewportView(display);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RED", "YELLOW", "ORANGE", "BLUE","GRAY","GREEN","PINK","MAGENTA" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("  SELECT HERE TO CHANGE COLOR:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 937, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int status=openfilechooser.showOpenDialog(rootPane);
        if(status==JFileChooser.APPROVE_OPTION){
            currentEditingFile=openfilechooser.getSelectedFile();
            System.out.println("File Choosen : File Name :"+openfilechooser.getSelectedFile().getName());
            try {
                Scanner sc=new Scanner(new FileInputStream(currentEditingFile));
                  String buffer = "";   
                while (sc.hasNext()) {  
                buffer += sc.nextLine() + "\n";  
                display.setText(buffer);
   }  
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
            
 
  
            
        }
        else{
            System.out.println("No File Selected !!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // user is editing a current fie
        if(currentEditingFile != null){
            try {
                PrintWriter writer=new PrintWriter(currentEditingFile);
                writer.write(display.getText());
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            
        }else{
             int status=saveDialog.showOpenDialog(null);
        if(status==JFileChooser.APPROVE_OPTION){
            String filename=JOptionPane.showInputDialog("Please provide with a file name","Untitled.txt");//sets the file name
           if(!filename.contains(".txt")){//if only name is given not exteson
               filename+=".txt";
           }
            File file=new File(saveDialog.getSelectedFile()+"//"+filename);
           if(!file.exists()){
               System.out.println("file not exist so create it");
                try {
                     System.out.println("works till here !!");
                    file.createNewFile();
                    FileWriter writer=new FileWriter(file.getAbsolutePath());
                    writer.write(display.getText());
                    writer.close();
                    JOptionPane.showMessageDialog(rootPane, "SAve DOne !", "SAVING Status", JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
               
           }else{
               JOptionPane.showInputDialog(rootPane,"File Alreadyy exists", "ERROR:File exists already ",JOptionPane.ERROR_MESSAGE);
           }
           
        }
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
      //display.setFont(font);
       StyledDocument doc = (StyledDocument) display.getDocument();
    int selectionEnd = display.getSelectionEnd();
    int selectionStart = display.getSelectionStart();
    if (selectionStart == selectionEnd) {
      return;
    }
        javax.swing.text.Element element = doc.getCharacterElement(selectionStart);
    AttributeSet as = element.getAttributes();

    MutableAttributeSet asNew = new SimpleAttributeSet(as.copyAttributes());
    StyleConstants.setBold(asNew, !StyleConstants.isBold(as));
    doc.setCharacterAttributes(selectionStart, display.getSelectedText()
        .length(), asNew, true);
    String text = (StyleConstants.isBold(as) ? "Cancel Bold" : "Bold");
    jButton3.setText(text);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //display.setFont(font1);
        StyledDocument doc = (StyledDocument) display.getDocument();
    int selectionEnd = display.getSelectionEnd();
    int selectionStart = display.getSelectionStart();
    if (selectionStart == selectionEnd) {
      return;
    }
        javax.swing.text.Element element = doc.getCharacterElement(selectionStart);
    AttributeSet as = element.getAttributes();

    MutableAttributeSet asNew = new SimpleAttributeSet(as.copyAttributes());
    StyleConstants.setItalic(asNew, !StyleConstants.isItalic(as));
    doc.setCharacterAttributes(selectionStart, display.getSelectedText()
        .length(), asNew, true);
    String text = (StyleConstants.isItalic(as) ? "Cancel Italic" : "Italic");
    jButton3.setText(text);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        JFontChooser fc=new JFontChooser();
        JOptionPane.showMessageDialog(null, fc,"Please CHoose Appropirate Font",JOptionPane.PLAIN_MESSAGE);
        display.setFont(fc.getPreviewFont());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
      //  display.setForeground(java.awt.Color.red);
      StyledDocument doc = (StyledDocument) display.getDocument();
    int selectionEnd = display.getSelectionEnd();
    int selectionStart = display.getSelectionStart();
    if (selectionStart == selectionEnd) {
      return;
    }
        javax.swing.text.Element element = doc.getCharacterElement(selectionStart);
    AttributeSet as = element.getAttributes();

    MutableAttributeSet asNew = new SimpleAttributeSet(as.copyAttributes());
    StyleConstants.setUnderline(asNew, rootPaneCheckingEnabled);
    doc.setCharacterAttributes(selectionStart, display.getSelectedText()
        .length(), asNew, true);
    String text = (StyleConstants.isUnderline(as) ? "Cancel Underline" : "Underline");
    jButton6.setText(text);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:   
jScrollPane2.setRowHeaderView(lineNumberingTextArea);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
       int status=imagefilechooser.showOpenDialog(rootPane);
        if(status==JFileChooser.APPROVE_OPTION){
            currentEditingFile1=imagefilechooser.getSelectedFile();
            String image_extension=currentEditingFile1.getName();
            if(image_extension.endsWith("jpg") || image_extension.endsWith(".png") || image_extension.endsWith(".jpeg") || image_extension.endsWith(".gif")){
           //insert the icon
                display.insertIcon(new ImageIcon(currentEditingFile1.getAbsolutePath()));
            } else{
                    // Show an error message, if not an image
                    JOptionPane.showMessageDialog(this,"The file is not an image.","Not Image",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
         String colorname=(String)jComboBox1.getSelectedItem();
           StyledDocument doc = (StyledDocument) display.getStyledDocument();
        int selectionEnd = display.getSelectionEnd();
        int selectionStart = display.getSelectionStart();
        int selectedLength =selectionEnd - selectionStart;
        if (selectionStart == selectionEnd) {
            return;
        }
        //this give your attribute set of selected Text. 
AttributeSet oldSet = doc.getCharacterElement(selectionEnd-1).getAttributes();

//StyleContext for creating attribute set
StyleContext sc = StyleContext.getDefaultStyleContext();
         if(colorname.equals("RED")){
          // Attribute set which contains new color with old attributes
AttributeSet s = sc.addAttribute(oldSet, StyleConstants.Foreground, Color.RED);
//This set the color of the Text
doc.setCharacterAttributes(selectionStart, selectedLength, s, true);   
         }
         if(colorname.equals("YELLOW")){
             // Attribute set which contains new color with old attributes
AttributeSet s = sc.addAttribute(oldSet, StyleConstants.Foreground, Color.YELLOW);
//This set the color of the Text
doc.setCharacterAttributes(selectionStart, selectedLength, s, true);
         }
         
           if(colorname.equals("ORANGE")){
             // Attribute set which contains new color with old attributes
AttributeSet s = sc.addAttribute(oldSet, StyleConstants.Foreground, Color.ORANGE);
//This set the color of the Text
doc.setCharacterAttributes(selectionStart, selectedLength, s, true);
         }
           
               if(colorname.equals("BLUE")){
             // Attribute set which contains new color with old attributes
AttributeSet s = sc.addAttribute(oldSet, StyleConstants.Foreground, Color.BLUE);
//This set the color of the Text
doc.setCharacterAttributes(selectionStart, selectedLength, s, true);
         }
               
               if(colorname.equals("GRAY")){
             // Attribute set which contains new color with old attributes
AttributeSet s = sc.addAttribute(oldSet, StyleConstants.Foreground, Color.DARK_GRAY);
//This set the color of the Text
doc.setCharacterAttributes(selectionStart, selectedLength, s, true);
         }
               if(colorname.equals("GREEN")){
             // Attribute set which contains new color with old attributes
AttributeSet s = sc.addAttribute(oldSet, StyleConstants.Foreground, Color.GREEN);
//This set the color of the Text
doc.setCharacterAttributes(selectionStart, selectedLength, s, true);
         }
               if(colorname.equals("PINK")){
             // Attribute set which contains new color with old attributes
AttributeSet s = sc.addAttribute(oldSet, StyleConstants.Foreground, Color.PINK);
//This set the color of the Text
doc.setCharacterAttributes(selectionStart, selectedLength, s, true);
         }
                if(colorname.equals("MAGENTA")){
             // Attribute set which contains new color with old attributes
AttributeSet s = sc.addAttribute(oldSet, StyleConstants.Foreground, Color.MAGENTA);
//This set the color of the Text
doc.setCharacterAttributes(selectionStart, selectedLength, s, true);
         }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane display;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
